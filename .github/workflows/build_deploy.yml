name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Get Project Version
        id: get_version
        run: echo ::set-output name=version::$(node -p "require('./package.json').version")

      - name: Create or Update GitHub Release
        run: |
          if ($null -eq $env:exists) {
            curl -X POST `
              -H "Authorization: $env:GITHUB_TOKEN" `
              -H "Accept: application/vnd.github.v3+json" `
              "https://api.github.com/repos/electronX/Release/releases" `
              -d '{"tag_name": "v$env:VERSION", "draft": false, "prerelease": false}'
          } else {
            curl -X PATCH `
              -H "Authorization: $env:GITHUB_TOKEN" `
              -H "Accept: application/vnd.github.v3+json" `
              "https://api.github.com/repos/electronX/Release/releases/tags/v$env:VERSION" `
              -d '{"tag_name": "v$env:VERSION", "draft": false, "prerelease": false}'
          }

      - name: Upload Windows Build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.get_version.outputs.version }}"
          files: |
            ./out/make/squirrel.windows/x64/*.exe
          draft: false
          repository: XectaDigitalLab/Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
